name: Build Dylinject

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Xcode command-line tools
        run: |
          sudo xcode-select --install || true

      - name: Downgrade project format for Xcode compatibility
        run: |
          sed -i '' 's/LastUpgradeCheck = [0-9]*;/LastUpgradeCheck = 76;/' dylinject.xcodeproj/project.pbxproj
          sed -i '' 's/objectVersion = [0-9]*;/objectVersion = 55;/' dylinject.xcodeproj/project.pbxproj
          # Replace unsupported file system synchronized group classes
          sed -i '' 's/PBXFileSystemSynchronizedRootGroup/PBXGroup/g' dylinject.xcodeproj/project.pbxproj

      - name: Build Dylinject
        run: |
          xcodebuild \
            -project dylinject.xcodeproj \
            -scheme dylinject \
            -configuration Release \
            -derivedDataPath build \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO

      - name: Diagnose build outputs
        run: |
          echo "Directory tree under build:"
          ls -R build || true
          echo "Found files:"
          find build -type f | sed 's/^/  /' || true

      - name: Prepare artifact directory
        run: |
          mkdir -p release
          # Найти собранный бинарник dylinject
          BIN_PATH=$(find build -type f -name dylinject -print | head -n1)
          if [ -z "$BIN_PATH" ]; then
            echo "Error: dylinject binary not found"
            exit 1
          fi
          echo "Copying $BIN_PATH to release directory"
          cp "$BIN_PATH" release/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dylinject-release
          path: release/dylinject
